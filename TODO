Do obejrzenia:
- spring data       izolacje https://www.youtube.com/watch?v=NTBI3xIcOqQ&ab_channel=BAZYDANYCHALTERNATYWNIE
- ports&adapters    https://www.youtube.com/watch?v=ILBX9fa9aJo&pp=ygUKbmFiZHJhbGlrIA%3D%3D
- JPA               https://www.youtube.com/watch?v=UPWkpl5PL_w
- JPA               https://www.youtube.com/watch?v=tKfDdtjYYi8
- REST              https://www.youtube.com/watch?v=lGLGW7EOzVY
Do przeczytania:
https://12factor.net/
https://tsh.io/blog/hexagonal-architecture/
https://blog.allegro.tech/2020/05/hexagonal-architecture-by-example.html
https://www.restapitutorial.com/
https://restfulapi.net/richardson-maturity-model/ (4 stopnie dojrzałości resta)
//@Transactional (readonly, rollbackFor, propagation, isolation(4 rodzaje))
//co to find/get/load w jpa
https://microservices.io/patterns/data/saga.html - wzorce architektoniczne
https://learn.microsoft.com/en-us/azure/architecture/reference-architectures/saga/saga - wzorce architektoniczne
https://www.youtube.com/watch?v=f8zaYDJctTA - just in time compiler

============
do ogarnięcia
-hashmapa equalsy
-rabbit mq
-prometeusz
-grafana
-bpmn
-uml
-c4
-metody/statusy HTTP
-mikroserwisy(kapaa, eventual consistenty, idempotencja)
-zabezpieczenia np oauth
-jakie są ograniczenia NoSQLa
-stany encji w entity managerze jpa

==============
        daily reading:
              *medium
              *uber blog
              *zalando blog
              *netflix blog








              ----------------
test containers:
implementuje ApplicationContextInitializer<GenericApplicationContext>


webclient do tego api
dodac model ksiazek(rozszerzyc baze danych) mamy isbny
*znaleźć jakieś API dot książek (mam: https://openlibrary.org/swagger/docs#/search/read_search_authors_json_search_authors_json_get)
    **użyć go w projekcie(webclient)
    **użyć drugiego API i zwrócić ich wyniki za pomocą Feature z java.util.concurrent
    **użyć wiremock

struktura w odpowiedziach z bledami do testow AuthorControllerTest?? context nie widzi mojego @ControllerAdvice

*dopisz testy

*InMemory database do testów

*dockeryzacja z docker-compose(baza niedostępna na zewnątrz)/https://www.baeldung.com/dockerizing-spring-boot-application

*test containers

*inmemory repository







///////

wzorce projektowe:
-porty i adaptery
-clean architecture
-saga orkiestracja
-saga choreografia
-outbox pattern

